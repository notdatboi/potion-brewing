#once

#include "../config.bff"

.ProjectName = 'ASIO'
.ProjectPath = 'asio'
.ObjPath = 'obj'
.OutputPath = 'lib'
.AdditionalIncludes = {'./', './$ProjectPath$', './$ProjectPath$/include', .WindowsIncludePath, .WindowsUcrtIncludePath, .WindowsSharedIncludePath}
.AdditionalDefines = {'ASIO_SEPARATE_COMPILATION'}

VCXProject('$ProjectName$-proj')
{
	.ProjectOutput = '$ProjectPath$\$ProjectName$.vcxproj'
	.ProjectBasePath = '$ProjectPath$'
	.ProjectInputPaths = {'$ProjectPath$'}
	.ProjectBuildCommand = 'cd ^$(SolutionDir) &amp; fbuild -ide -dist -cache ^$(ProjectName)-^$(Configuration)'
	;.ProjectCleanCommand = 'cd ^$(SolutionDir) &amp; fbuild -ide Clean-^$(ProjectName)-^$(Configuration)'
	.ProjectRebuildCommand = 'cd ^$(SolutionDir) &amp; fbuild -ide -clean -dist -cache ^$(ProjectName)-^$(Configuration)'
	.ProjectConfigs = .PlatformConfigPairs
}

.AdditionalIncludeStringMSVC = ''
ForEach(.Folder in .AdditionalIncludes)
{
	^AdditionalIncludeStringMSVC + ' /I"$Folder$"'
}

.AdditionalDefineStringMSVC = ''
ForEach(.Define in .AdditionalDefines)
{
	^AdditionalDefineStringMSVC + ' /D"$Define$"'
}

ForEach(.Config in .PlatformConfigPairs)
{
	Using(.Config)
	Using(.BuilderConfig)
	Library('$ProjectName$-$Config$')
	{
		;.Compiler ; inherited
		.CompilerOptions + .AdditionalIncludeStringMSVC ; inherited
			+ .AdditionalDefineStringMSVC
			+ .AdditionalCompilerFlags
		.CompilerOutputPath = '$ObjPath$/$Config$/$ProjectName$'
		.CompilerInputPath = .ProjectPath
		;.Librarian ; inherited
		.LibrarianOptions + .AdditionalLibrarianFlags ; inherited
		.LibrarianOutput = '$OutputPath$/$Config$/$ProjectName$.lib'
	}
}
