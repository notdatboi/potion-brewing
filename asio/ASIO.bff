#once

#include "../config.bff"

.ProjectName = 'ASIO'
.ProjectPath = 'asio'
.ObjPath = 'obj'
.OutputPath = 'lib'

.StaticLibExtension =
#if __WINDOWS__
	'lib'
#else
	'a'
#endif

.AdditionalIncludes = {'./', './$ProjectPath$', './$ProjectPath$/include'}
#if __WINDOWS__
.AdditionalIncludes + .WindowsIncludePath
	+ .WindowsUcrtIncludePath
	+ .WindowsSharedIncludePath
#else
#endif
.AdditionalDefines = {'ASIO_SEPARATE_COMPILATION'}

#if __WINDOWS__
VCXProject('$ProjectName$-proj')
{
	.ProjectOutput = '$ProjectPath$\$ProjectName$.vcxproj'
	.ProjectBasePath = '$ProjectPath$'
	.ProjectInputPaths = {'$ProjectPath$'}
	.ProjectBuildCommand = 'cd ^$(SolutionDir) &amp; fbuild -ide -dist -cache ^$(ProjectName)-^$(Configuration)'
	;.ProjectCleanCommand = 'cd ^$(SolutionDir) &amp; fbuild -ide Clean-^$(ProjectName)-^$(Configuration)'
	.ProjectRebuildCommand = 'cd ^$(SolutionDir) &amp; fbuild -ide -clean -dist -cache ^$(ProjectName)-^$(Configuration)'
	.ProjectConfigs = .PlatformConfigPairs
}
#endif

.AdditionalIncludeString = ''
ForEach(.Folder in .AdditionalIncludes)
{
	^AdditionalIncludeString
#if __WINDOWS__
		+ ' /I"$Folder$"'
#else
		+ ' -I "$Folder$"'
#endif
}

.AdditionalDefineString = ''
ForEach(.Define in .AdditionalDefines)
{
	^AdditionalDefineString
#if __WINDOWS__
		+ ' /D"$Define$"'
#else
		+ ' -D $Define$'
#endif
}

ForEach(.Config in .PlatformConfigPairs)
{
	Using(.Config)
	Using(.BuilderConfig)
	Library('$ProjectName$-$Config$')
	{
		;.Compiler ; inherited
		.CompilerOptions + .AdditionalIncludeString ; inherited
			+ .AdditionalDefineString
			+ .AdditionalCompilerFlags
		.CompilerOutputPath = '$ObjPath$/$Config$/$ProjectName$'
		.CompilerInputPath = .ProjectPath
		;.Librarian ; inherited
		.LibrarianOptions + .AdditionalLibrarianFlags ; inherited
		.LibrarianOutput = '$OutputPath$/$Config$/$ProjectName$.$StaticLibExtension$'
	}
}
